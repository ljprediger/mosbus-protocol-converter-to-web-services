/* soapStub.h
   Generated by gSOAP 2.7.14 from modbus.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_ARREGLO_type
#define SOAP_TYPE_ARREGLO_type (7)
/* SOAP encoded array of xsd:unsignedByte schema type: */
struct ARREGLO_type
{
	unsigned char *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_mb_pdu_decimal
#define SOAP_TYPE_mb_pdu_decimal (11)
/* mb-pdu-decimal */
struct mb_pdu_decimal
{
	unsigned char ID_escalvo;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:unsignedByte */
	unsigned char funcion;	/* required element of type xsd:unsignedByte */
	struct ARREGLO_type datos;	/* required element of type ArrayOfunsignedByte */
};
#endif

#ifndef SOAP_TYPE_mb_master_config
#define SOAP_TYPE_mb_master_config (12)
/* mb-master-config */
struct mb_master_config
{
	unsigned char Trasporte;	/* required element of type xsd:unsignedByte */
	unsigned char Cant_Reintentos;	/* required element of type xsd:unsignedByte */
	unsigned short Time_Out;	/* required element of type xsd:unsignedShort */
	unsigned long Baud_Rate;	/* required element of type xsd:unsignedLong */
	unsigned char Data_Bits;	/* required element of type xsd:unsignedByte */
	unsigned char Parity_Bits;	/* required element of type xsd:unsignedByte */
	unsigned char Stop_Bits;	/* required element of type xsd:unsignedByte */
};
#endif

#ifndef SOAP_TYPE_ns__mb_master_consulta
#define SOAP_TYPE_ns__mb_master_consulta (19)
/* ns:mb-master-consulta */
struct ns__mb_master_consulta
{
	struct mb_pdu_decimal *pregunta;	/* optional element of type mb-pdu-decimal */
};
#endif

#ifndef SOAP_TYPE_ns__mb_master_configResponse
#define SOAP_TYPE_ns__mb_master_configResponse (22)
/* ns:mb-master-configResponse */
struct ns__mb_master_configResponse
{
	unsigned char *mb_error_config;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:unsignedByte */
};
#endif

#ifndef SOAP_TYPE_ns__mb_master_config
#define SOAP_TYPE_ns__mb_master_config (23)
/* ns:mb-master-config */
struct ns__mb_master_config
{
	struct mb_master_config *config;	/* optional element of type mb-master-config */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (24)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (25)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (27)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (30)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (31)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operations                                                         *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 ns__mb_master_consulta(struct soap*, struct mb_pdu_decimal *pregunta, struct mb_pdu_decimal *respuesta);

SOAP_FMAC5 int SOAP_FMAC6 ns__mb_master_config(struct soap*, struct mb_master_config *config, unsigned char *mb_error_config);

/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__mb_master_consulta(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct mb_pdu_decimal *pregunta, struct mb_pdu_decimal *respuesta);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__mb_master_config(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct mb_master_config *config, unsigned char *mb_error_config);

/******************************************************************************\
 *                                                                            *
 * Skeletons                                                                  *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__mb_master_consulta(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__mb_master_config(struct soap*);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
